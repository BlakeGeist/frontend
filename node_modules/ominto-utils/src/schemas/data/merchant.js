'use strict';

const _ = require('lodash');
const Joi = require('joi');
const buildSchema = require('./../build-schema');
const common = require('../common');

const baseFields = {
  id: common.id,
  description: common.description,
  lang: common.lang,
  region: common.region,
  affiliate_id: Joi.string().max(200),
  affiliate_name: Joi.string().max(200),
  affiliate_tracking_url: Joi.string().max(1000).allow(''),
  override_rate: Joi.number().integer().min(0),
  rank: Joi.number().integer().description('A ranking which we internally give to each merchant. This is used to sort the merchants returned from a Get All request. The higher the number, the earlier a merchant will appear in the list'),
  imp_created_via: common.createdVia,
  imp_overridden_categories: Joi.string(),
  imp_overridden_fields: Joi.string(),
  imp_last_import_time: Joi.date()
};

const detailFields = {
  id: common.id,
  merchant_id: common.id,
  lang: common.lang,
  region: common.region,
  name: common.name,
  slug: common.slug,
  description: common.description,
  details: Joi.string().allow(''),
  seo_title: Joi.string().max(500).allow('', null),
  seo_keywords: Joi.string().max(500).allow('', null),
  exceptions: Joi.string().max(6500).allow(''),
  display_url: Joi.string().max(1000).allow(''),
  logo_asset_id: Joi.number().integer(),
  cover_asset_id: Joi.number().integer(),
  hero_asset_id: Joi.number().integer(),
  reviewed: Joi.number().integer().max(1),
  active: Joi.number().integer().max(1).description('Active flag for this merchant. If 0, merchant is inactive and will not appear in any request from the API (get list, get by ID, search, etc). If 1, merchant will appear in response objects as normal')
};

const requiredForPost = ['affiliate_id', 'affiliate_name', 'affiliate_tracking_url'];

const attributeFields = {};

const additionalForbiddenAttribs = ['coverImageBgColor', 'coverImagePrimaryColor', 'heroImageBgColor', 'heroImagePrimaryColor'];

module.exports = buildSchema(_.merge(baseFields, detailFields), requiredForPost, attributeFields, additionalForbiddenAttribs);
